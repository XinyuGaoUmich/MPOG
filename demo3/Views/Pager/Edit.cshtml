@model demo3.Models.EditPager
@{
    /**/

    /**/

    Layout = null;
    Boolean isLoggedin = false;
    Boolean hasPublishedVersion = true;
    if (Session["userid"] != null)
    {
        isLoggedin = true;
    }

    if (Model.pager_Results.Count() == 0)
    {
        hasPublishedVersion = false;
    }


}


<!DOCTYPE html>
<html>
<head>
    <title>Pager Page</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <script src="https://code.jquery.com/jquery-1.11.2.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
    <link href="~/Content/table_in_edit.css" rel="stylesheet" type="text/css" />
    <!-- Latest compiled and minified CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.12.4/css/bootstrap-select.min.css">
    <link href="~/Content/fixed_button.css" rel="stylesheet" type="text/css" />
    <!-- Latest compiled and minified JavaScript -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.12.4/js/bootstrap-select.min.js"></script>

    <!-- (Optional) Latest compiled and minified JavaScript translation files -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.full.js"></script>

    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

</head>
<body data-spy="scroll" data-target=".navbar" data-offset="50">

    <nav class="navbar navbar-inverse navbar-fixed-top">

        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#myNavbar">
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>

        </div>
        <div style="padding-right:55px;padding-left:55px; background-color: white">
            <a href="https://mpog.org/">
                <img class="mobile-logo preload-me" src="https://mpog.org/wp-content/uploads/2017/08/MPOG_LOGO4.jpg"
                     srcset="https://mpog.org/wp-content/uploads/2017/08/MPOG_LOGO4.jpg 301w, https://mpog.org/wp-content/uploads/2017/08/MPOG_LOGO4.jpg 301w"
                     width="301" height="73" sizes="301px" alt="MPOG">
            </a>

            @if (isLoggedin) //isLogin
            {
                <div style="float: right; margin-top: 20px">
                    <div style="display: flex;">
                        <span style="text-align:center;height:inherit">Hello, @(Session["first_name"] + " " + Session["last_name"])! &nbsp; &nbsp; </span>
                        <button type="submit" class="btn-primary btn" style="float: right" onclick="location.href='@Url.Action("Logout", "Home")'">Logout</button>
                    </div>
                </div>

            }
            else
            {
                <button type="submit" class="btn-primary btn" style="float: right; margin-top: 20px" onclick="location.href='@Url.Action("Login", "Home")'">QI Coordinator Login</button>
            }


        </div>
        <div class="collapse navbar-collapse" id="myNavbar" style="box-sizing:content-box">
            <ul class="nav navbar-nav">

                <li class="dropdown">
                    <a class="dropdown-toggle" data-toggle="dropdown" href="#">@Model.pager_Auth_Results.First().Measure_Abbreviation Basic Info<span class="caret"></span></a>
                    <ul class="dropdown-menu">
                        <li><a href="#">NQS Domain</a></li>
                        <li><a href="#">Measure Type</a></li>
                        <li><a href="#">Scope</a></li>
                        <li><a href="#">Threshold</a></li>
                    </ul>
                </li>
                <li><a href="#section2">Data Collection Method</a></li>
                <li><a href="#section3">Description</a></li>
                <li><a href="#section4">Measure Summary</a></li>

                <li><a href="#section5">Inclusions</a></li>
                <li><a href="#section6">Exclusions</a></li>

                <li><a href="#section7">Success</a></li>
                <li><a href="#section8">Responsible Provider</a></li>
                <li><a href="#section9">Risk Adjustment</a></li>

                <li><a href="#section10">References</a></li>

            </ul>
        </div>

    </nav>

    <div id="section1">
        <div style="display:flex; justify-content: space-between;">
            <div style="display:flex; justify-content:space-between; width:50%">
                <h4>
                    @Html.ActionLink("Go Back to Measure List", "Index", "Measures")
                </h4>

                <h4>
                    @Html.ActionLink("View " + (String)Model.pager_Auth_Results.First().Measure_Abbreviation + " Spec", "Index", "Spec", new { id = @Model.pager_Auth_Results.First().Measure_ID }, null)
                </h4>
            </div>

            <div style="display:flex; justify-content: space-around; width:50%">
                <h4>
                    <a id="save" style="cursor: pointer">Save</a>
                </h4>

                <h4>
                    @Html.ActionLink("Publish", "Publish")
                </h4>
            </div>
        </div>

        <h2>@Model.pager_Auth_Results.First().Measure_Abbreviation Basic Info</h2>
        <table>
            <tr>
                <th>Unpublished</th>
                <th>Published</th>
            </tr>
            <tr>
                <td>
                    <div class="form-group" style="display:none">
                        @Html.LabelFor(model => model.pager_Auth_Results.First().Measure_ID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.pager_Auth_Results.First().Measure_ID, new { htmlAttributes = new { @class = "selectpicker" } })
                            @Html.ValidationMessageFor(model => model.pager_Auth_Results.First().Measure_ID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" style="display:inline">
                        @Html.LabelFor(model => model.pager_Auth_Results.First().Measure_Abbreviation, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.pager_Auth_Results.First().Measure_Abbreviation, new { @class = "form-control", @style = "width: 220px", @id = "measure_abbreviation" })
                            @Html.ValidationMessageFor(model => model.pager_Auth_Results.First().Measure_Abbreviation, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" style="display:inline">
                        @Html.LabelFor(model => model.pager_Auth_Results.First().NQS_Domain, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.DropDownListFor(model => model.pager_Auth_Results.First().NQS_Domain_ID, new SelectList(Model.nQS_Domain, "NQS_Domain_ID", "NQS_Domain_Name", selectedValue: Model.pager_Auth_Results.First().NQS_Domain_ID), new { @class = "selectpicker", @style = "height: 30px", @id = "nqs_domain" })
                            @Html.ValidationMessageFor(model => model.pager_Auth_Results.First().NQS_Domain, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" style="display:inline">
                        @Html.LabelFor(model => model.pager_Auth_Results.First().Measure_Type, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.DropDownListFor(model => model.pager_Auth_Results.First().Measure_Type_ID, new SelectList(Model.measure_Type, "Measure_Type_ID", "Measure_Type_Name", selectedValue: Model.pager_Auth_Results.First().Measure_Type_ID), new { @class = "selectpicker", @style = "height: 30px", @id = "measure_type" })
                            @Html.ValidationMessageFor(model => model.pager_Auth_Results.First().Measure_Type_ID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" style="display:inline">
                        @Html.LabelFor(model => model.pager_Auth_Results.First().Scope, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.DropDownListFor(model => model.pager_Auth_Results.First().Measure_Scope_ID, new SelectList(Model.scope, "Scope_ID", "Scope_Name", selectedValue: Model.pager_Auth_Results.First().Measure_Scope_ID), new { @class = "selectpicker", @style = "height: 30px", @id = "scope" })
                            @Html.ValidationMessageFor(model => model.pager_Auth_Results.First().Measure_Scope_ID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" style="display:inline">
                        @Html.LabelFor(model => model.pager_Auth_Results.First().Threshold, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.pager_Auth_Results.First().Threshold, new { @class = "form-control", @style = "width: 220px", @id = "threshold" })
                            @Html.ValidationMessageFor(model => model.pager_Auth_Results.First().Threshold, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </td>

                <td>
                    @if (hasPublishedVersion)
                    {
                        <div class="form-group" style="display:inline">
                            @Html.LabelFor(model => model.pager_Auth_Results.First().Measure_Abbreviation, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.TextBoxFor(model => model.pager_Results.First().Measure_Abbreviation, new { @class = "form-control", @readonly = "readonly", @style = "height: 30px" })
                                @Html.ValidationMessageFor(model => model.pager_Auth_Results.First().Measure_Abbreviation, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.pager_Results.First().NQS_Domain, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.TextBoxFor(model => model.pager_Results.First().NQS_Domain, new { @class = "form-control", @readonly = "readonly", @style = "height: 30px" })

                                @*@Html.DisplayFor(model => model.pager_Results.First().NQS_Domain, new { htmlAttributes = new { @class = "form-control" } })*@
                                @Html.ValidationMessageFor(model => model.pager_Results.First().NQS_Domain, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.pager_Results.First().Measure_Type, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.TextBoxFor(model => model.pager_Results.First().Measure_Type, new { @class = "form-control", @readonly = "readonly", @style = "height: 30px" })

                                @*@Html.DisplayFor(model => model.pager_Results.First().Measure_Type, new { htmlAttributes = new { @class = "form-control" } })*@
                                @Html.ValidationMessageFor(model => model.pager_Results.First().Measure_Type, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.pager_Results.First().Scope, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.TextBoxFor(model => model.pager_Results.First().Scope, new { @class = "form-control", @readonly = "readonly", @style = "height: 30px" })

                                @*@Html.DisplayFor(model => model.pager_Results.First().Measure_Type, new { htmlAttributes = new { @class = "form-control" } })*@
                                @Html.ValidationMessageFor(model => model.pager_Results.First().Scope, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.pager_Results.First().Threshold, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.TextBoxFor(model => model.pager_Results.First().Threshold, new { @class = "form-control", @readonly = "readonly", @style = "height: 30px" })

                                @*@Html.DisplayFor(model => model.pager_Results.First().Measure_Type, new { htmlAttributes = new { @class = "form-control" } })*@
                                @Html.ValidationMessageFor(model => model.pager_Results.First().Threshold, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    }
                </td>
            </tr>
        </table>


    </div>

    <span class="anchor" id="section2"></span>
    <div id="section22">

        <h2>Data Collection Method</h2>
        <table>
            <tr>
                <th>Unpublished</th>
                <th>Published</th>
            </tr>
            <tr>
                <td>
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.pager_Auth_Results.First().Data_Collection_Method, new { @class = "form-control", @cols = "80", @rows = "5", @id = "data_collection_method" })
                        @Html.ValidationMessageFor(model => model.pager_Auth_Results.First().Data_Collection_Method, "", new { @class = "text-danger" })
                    </div>

                </td>


                <td>
                    @if (hasPublishedVersion)
                    {
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.pager_Results.First().Data_Collection_Method, new { @class = "form-control", @readonly = "readonly", @cols = "80", @rows = "5" })
                            @Html.ValidationMessageFor(model => model.pager_Results.First().Data_Collection_Method, "", new { @class = "text-danger" })
                        </div>
                    }

                </td>
            </tr>
        </table>

    </div>

    <span class="anchor" id="section3"></span>
    <div id="section33">
        <h2>Description</h2>
        <table>
            <tr>
                <th>Unpublished</th>
                <th>Published</th>
            </tr>
            <tr>
                <td>
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.pager_Auth_Results.First().Description, new { @class = "form-control", @cols = "80", @rows = "5", @id = "description" })
                        @Html.ValidationMessageFor(model => model.pager_Auth_Results.First().Description, "", new { @class = "text-danger" })
                    </div>

                </td>
                <td>
                    @if (hasPublishedVersion)
                    {
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.pager_Results.First().Description, new { @class = "form-control", @cols = "80", @rows = "5", @readonly = "readonly", })
                            @Html.ValidationMessageFor(model => model.pager_Results.First().Description, "", new { @class = "text-danger" })
                        </div>
                    }
                </td>
            </tr>
        </table>
    </div>

    <span class="anchor" id="section4"></span>
    <div id="section44">
        <h2>Measure Summary</h2>
        <table>
            <tr>
                <th>Unpublished</th>
                <th>Published</th>
            </tr>
            <tr>
                <td>
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.pager_Auth_Results.First().Measure_Summary, new { @class = "form-control", @cols = "80", @rows = "5", @id = "measure_summary" })
                        @Html.ValidationMessageFor(model => model.pager_Auth_Results.First().Measure_Summary, "", new { @class = "text-danger" })
                    </div>

                </td>
                <td>
                    @if (hasPublishedVersion)
                    {
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.pager_Results.First().Measure_Summary, new { @class = "form-control", @cols = "80", @rows = "5", @readonly = "readonly", })
                            @Html.ValidationMessageFor(model => model.pager_Results.First().Measure_Summary, "", new { @class = "text-danger" })
                        </div>
                    }
                </td>
            </tr>
        </table>
    </div>

    <span class="anchor" id="section5"></span>
    <div id="section55">
        <h2>Inclusions</h2>
        <table>
            <tr>
                <th>Unpublished</th>
                <th>Published</th>
            </tr>
            <tr>
                <td>
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.pager_Auth_Results.First().Inclusions, new { @class = "form-control", @cols = "80", @rows = "5", @id = "inclusions" })
                        @Html.ValidationMessageFor(model => model.pager_Auth_Results.First().Inclusions, "", new { @class = "text-danger" })
                    </div>

                </td>
                <td>
                    @if (hasPublishedVersion)
                    {
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.pager_Results.First().Inclusions, new { @class = "form-control", @cols = "80", @rows = "5", @readonly = "readonly", })
                            @Html.ValidationMessageFor(model => model.pager_Results.First().Inclusions, "", new { @class = "text-danger" })
                        </div>
                    }
                </td>
            </tr>
        </table>
    </div>

    <span class="anchor" id="section6"></span>
    <div id="section66">
        <h2>Exclusions</h2>
        <table>
            <tr>
                <th>Unpublished</th>
                <th>Published</th>
            </tr>
            <tr>
                <td>
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.pager_Auth_Results.First().Exclusions, new { @class = "form-control", @cols = "80", @rows = "5", @id = "exclusions" })
                        @Html.ValidationMessageFor(model => model.pager_Auth_Results.First().Exclusions, "", new { @class = "text-danger" })
                    </div>

                </td>
                <td>
                    @if (hasPublishedVersion)
                    {
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.pager_Results.First().Exclusions, new { @class = "form-control", @cols = "80", @rows = "5", @readonly = "readonly", })
                            @Html.ValidationMessageFor(model => model.pager_Results.First().Exclusions, "", new { @class = "text-danger" })
                        </div>
                    }
                </td>
            </tr>
        </table>
    </div>


    <span class="anchor" id="section7"></span>
    <div id="section77">
        <h2>Success</h2>
        <table>
            <tr>
                <th>Unpublished</th>
                <th>Published</th>
            </tr>
            <tr>
                <td>
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.pager_Auth_Results.First().Success, new { @class = "form-control", @cols = "80", @rows = "5", @id = "success" })
                        @Html.ValidationMessageFor(model => model.pager_Auth_Results.First().Success, "", new { @class = "text-danger" })
                    </div>

                </td>
                <td>
                    @if (hasPublishedVersion)
                    {
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.pager_Results.First().Success, new { @class = "form-control", @cols = "80", @rows = "5", @readonly = "readonly", })
                            @Html.ValidationMessageFor(model => model.pager_Results.First().Success, "", new { @class = "text-danger" })
                        </div>
                    }
                </td>
            </tr>
        </table>
    </div>

    <span class="anchor" id="section8"></span>
    <div id="section88">
        <h2>Responsible Provider</h2>
        <table>
            <tr>
                <th>Unpublished</th>
                <th>Published</th>
            </tr>
            <tr>
                <td>
                    <div id="responsible_provider">
                        @foreach (var item in Model.responsible_Provider_id)
                        {
                            <div class="col-md-10" style="word-wrap:break-word" id="@(item.Responsible_Provider_ID + "div")">
                                <textarea class="provider" id="@item.Responsible_Provider_ID" cols="60" rows="3" wrap="hard">@Model.responsible_Provider.Where(o=>o.Responsible_Provider_ID == item.Responsible_Provider_ID).First().Responsible_Provider_Name</textarea>
                                <input type='hidden' class="providerId originalProviderId" id="@(item.Responsible_Provider_ID + "input")" value="@item.Responsible_Provider_ID" />
                                <button class="delete" id="@(item.Responsible_Provider_ID + "delete")">delete</button>
                            </div>

                        }
                    </div>
                    <div style="padding-left: 20px; padding-top: 10px">
                        <button type="button" class="btn-primary" id="add_provider">Add more from list</button>
                    </div>

                    <div style="margin-left: 20px; margin-top: 10px">
                        <button type="button" class="btn-primary" id="create_provider">Create new Providers</button>
                    </div>


                </td>


                <td>
                    @if (hasPublishedVersion)
                    {
                        foreach (var item in Model.responsible_Provider_id_published)
                        {

                            <textarea readonly cols="60" rows="3" wrap="hard">@Model.responsible_Provider.Where(o=>o.Responsible_Provider_ID == item.Responsible_Provider_ID).First().Responsible_Provider_Name</textarea>

                        }

                    }
                </td>
            </tr>
        </table>
    </div>

    <span class="anchor" id="section9"></span>
    <div id="section99">
        <h2>Risk Adjustment</h2>
        <table>
            <tr>
                <th>Unpublished</th>
                <th>Published</th>
            </tr>
            <tr>
                <td>
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.pager_Auth_Results.First().Risk_Adjustment, new { @class = "form-control", @cols = "80", @rows = "5", @id = "risk_adjustment" })
                        @Html.ValidationMessageFor(model => model.pager_Auth_Results.First().Risk_Adjustment, "", new { @class = "text-danger" })
                    </div>

                </td>
                <td>
                    @if (hasPublishedVersion)
                    {
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.pager_Results.First().Risk_Adjustment, new { @class = "form-control", @cols = "80", @rows = "5", @readonly = "readonly", })
                            @Html.ValidationMessageFor(model => model.pager_Results.First().Risk_Adjustment, "", new { @class = "text-danger" })
                        </div>
                    }
                </td>
            </tr>
        </table>
    </div>

    <span class="anchor" id="section10"></span>
    <div id="section1010">
        <h2>References</h2>
        <table>
            <tr>
                <th>Unpublished</th>
                <th>Published</th>
            </tr>
            <tr>
                <td>
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.pager_Auth_Results.First().Reference, new { @class = "form-control", @cols = "80", @rows = "5", @id = "references" })
                        @Html.ValidationMessageFor(model => model.pager_Auth_Results.First().Reference, "", new { @class = "text-danger" })
                    </div>

                </td>
                <td>
                    @if (hasPublishedVersion)
                    {
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.pager_Results.First().Reference, new { @class = "form-control", @cols = "80", @rows = "5", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.pager_Results.First().Reference, "", new { @class = "text-danger" })
                        </div>
                    }
                </td>
            </tr>
        </table>
    </div>
    <button id="top">Top</button>
    @if (@Model.responsible_Provider_id.LastOrDefault() == null)
    {
        <input id="count" value="0" type="hidden" />
    }
    else
    {
        <input id="count" type="hidden" value="@Model.responsible_Provider_id.LastOrDefault().Responsible_Provider_ID" />
    }

    <script type="text/javascript">


        $(document).ready(function () {
            var number = 1;
            var count = $("#count").val();
            var delete_provider = [];
            var add_new_provider = [];
            var add_existing_provider = [];



            $('#add_provider').click(function () {
                        var id = parseInt(count) + number;
                        number = number + 1;
                        var element = `<div id='${id}div' class='col-md-10' style='word-wrap:break-word'><textarea class='provider' id=${id} cols='60' rows='3' wrap='hard'> </textarea><input type='hidden' class='providerId addExistingProviderId' id='${id}input' /><button class='delete' id='${id}delete')>delete</button></div>`;
                $('#responsible_provider').append(element);
                $(`#${id}`).each(Autocomplete);
                $(`#${id}delete`).click(onDelete);
            });

            $('#create_provider').click(function () {
                var id = parseInt(count) + number;
                number = number + 1;
                var element = `<div class='col-md-10' style='word-wrap:break-word' id='${id}div'><textarea class='newProvider' id=${id} cols='60' rows='3' wrap='hard'> </textarea><button class='delete' id='${id}delete')>delete</button></div>`;
                $('#responsible_provider').append(element);
                $(`#${id}delete`).click(onDelete);
            });

            $('.delete').click(onDelete);

            function onDelete() {
                var iddelete = $(this).prop('id');
                var id = iddelete.replace('delete', '');

                if ($('#'+ id + 'input').hasClass('originalProviderId')) {
                    delete_provider.push(id);
                    console.log(delete_provider);
                }
                $('#' + id + 'div').remove();

            }

            function Autocomplete() {
                var id = $(this).prop('id');
                $(this).autocomplete({
                    source: function (request, response) {
                        $.ajax({
                            url: '@Url.Action("AutocompleteProvider")',
                            datatype: "json",
                            data: {
                                term: request.term
                            },
                            success: function (data) {
                                console.log(data.message);
                                response($.map(data.providerList, function (val, item) {
                                    return {
                                        label: val.provider,
                                        value: val.provider,
                                        id: val.id
                                    }
                                }))
                            }
                        })
                    },
                    change: function (event, ui) {
                        if (ui.item == null || ui.item == undefined) {
                            console.log(id);
                            $('#' + id + "input").val('');
                            $('#' + id).val('');
                        }
                    },
                    select: function (event, ui) {
                        var id = $(this).prop('id');

                        $('#' + id + "input").val(ui.item.id);
                    }
                })
            }

            $(".provider").each(Autocomplete);

            $("#top").click(function () {
                $("html, body").animate({ scrollTop: 0 }, 600)
            })

            $('#save').click(function () {
                var measure_abbreviation = $('#measure_abbreviation').val()
                var nqs_domain = parseInt($('#nqs_domain').val());
                var measure_type = $('#measure_type').val();
                var scope = $('#scope').val();
                var threshold = $('#threshold').val();
                var data_collection_method = $('#data_collection_method').val();
                var description = $('#description').val();
                var measure_summary = $('#measure_summary').val();
                var inclusions = $('#inclusions').val();
                var exclusions = $('#exclusions').val();
                var success = $('#success').val();
                var risk_adjustment = $('#risk_adjustment').val();
                var references = $('#references').val();
                var measure_id = $('#Measure_ID').val();

                $('.newProvider').each(function () {
                    var value = $(this).val();
                    add_new_provider.push(value);
                })

                $('.addExistingProviderId').each(function () {
                    var value = $(this).val();
                    add_existing_provider.push(value);
                })

                console.log(add_new_provider);
                console.log(delete_provider);
                console.log(add_existing_provider);

                data = {
                    'measure_id': measure_id,
                    'measure_abbreviation': measure_abbreviation,
                    'nqs_domain': nqs_domain,
                    'measure_type': measure_type,
                    'scope': scope,
                    'threshold': threshold,
                    'data_collection_method': data_collection_method,
                    'description': description,
                    'measure_summary': measure_summary,
                    'inclusions': inclusions,
                    'exclusions': exclusions,
                    'success': success,
                    'risk_adjustment': risk_adjustment,
                    'references': references,
                    'add_new_provider': add_new_provider,
                    'delete_provider': delete_provider,
                    'add_existing_provider': add_existing_provider
                };
                console.log(data);
                $.ajax({
                    url: '@Url.Action("Save")',
                    type: 'POST',
                    data: {
                        'measure_id': measure_id,
                        'measure_abbreviation': measure_abbreviation,
                        'nqs_domain': nqs_domain,
                        'measure_type': measure_type,
                        'scope': scope,
                        'threshold': threshold,
                        'data_collection_method': data_collection_method,
                        'description': description,
                        'measure_summary': measure_summary,
                        'inclusions': inclusions,
                        'exclusions': exclusions,
                        'success': success,
                        'risk_adjustment': risk_adjustment,
                        'references': references,
                        'add_new_provider': add_new_provider,
                        'delete_provider': delete_provider,
                        'add_existing_provider': add_existing_provider
                    },
                    success: function (data) {
                        if (data.success) {
                            console.log(data.message);
                            alert('Saved pager successfully!');
                            window.location.href = "/Pager/Index/" + measure_id;
                        }
                        else {
                            console.log(data.message);
                            alert('Failed to save pager!');
                        }

                    },
                    error: function () {
                        console.log('failed to get result back from the database!');
                    }


                })

            })
        })
    </script>

</body>
</html>

