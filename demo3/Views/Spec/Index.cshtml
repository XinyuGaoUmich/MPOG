@model demo3.Models.EditSpec

@{
    Layout = null;
    Boolean isLoggedin = false;
    Boolean isQI = false;
    Boolean hasPublishedVersion = true;
    Boolean hasPublishedProvider = true;
    if (Session["userid"] != null)
    {
        isLoggedin = true;
    }
    if (Session["roles"] != null && Session["roles"].ToString().Contains("MeasureSpecEditor"))
    {
        isQI = true;
    }

    if (Model.spec_Published_Results.Count() == 0)
    {
        hasPublishedVersion = false;
    }

    if (hasPublishedVersion && Model.spec_Published_Results.First().Responsible_Provider == null)
    {
        hasPublishedProvider = false;
    }
}

<!DOCTYPE html>
<html>
<head>
    <title>Spec Page</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <link href="~/Content/table_in_edit.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/fixed_button.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">


    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
    <script src="https://cdn.ckeditor.com/4.9.2/basic/ckeditor.js"></script>
</head>
<body data-spy="scroll" data-target=".navbar" data-offset="50">
    <nav class="navbar navbar-inverse navbar-fixed-top">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#myNavbar">
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
        </div>
        <div style="padding-right:55px;padding-left:55px; background-color: white">
            <a href="https://mpog.org/">
                <img class="mobile-logo preload-me" src="https://mpog.org/wp-content/uploads/2017/08/MPOG_LOGO4.jpg"
                     srcset="https://mpog.org/wp-content/uploads/2017/08/MPOG_LOGO4.jpg 301w, https://mpog.org/wp-content/uploads/2017/08/MPOG_LOGO4.jpg 301w"
                     width="301" height="73" sizes="301px" alt="MPOG">
            </a>

            @if (isLoggedin) //isLogin
            {
                <div style="float: right; margin-top: 20px">
                    <div style="display: flex;">
                        <span style="text-align:center;height:inherit">Hello, @(Session["first_name"] + " " + Session["last_name"])! &nbsp; &nbsp; </span>
                        <button type="submit" class="btn-primary btn" style="float: right" onclick="location.href='@Url.Action("Logout", "Home")'">Logout</button>
                    </div>
                </div>
            }
            else
            {
                <button type="submit" class="btn-primary btn" style="float: right; margin-top: 20px" onclick="location.href='@Url.Action("Login", "Home")'">QI Coordinator Login</button>
            }
        </div>

        <div class="collapse navbar-collapse" id="myNavbar" style="box-sizing:content-box">
            <ul class="nav navbar-nav">
                <li class="dropdown">
                    <a class="dropdown-toggle" data-toggle="dropdown" href="#">@Model.spec_Results.First().Measure_Abbreviation Basic Info<span class="caret"></span></a>
                    <ul class="dropdown-menu">
                        <li><a href="#">NQS Domain</a></li>
                        <li><a href="#">Measure Type</a></li>
                        <li><a href="#">Scope</a></li>
                        <li><a href="#">Threshold</a></li>
                    </ul>
                </li>
                <li><a href="#section2">Data Collection Method</a></li>
                <li><a href="#section3">Description</a></li>
                <li><a href="#section4">Measure Summary</a></li>
                <li><a href="#section5">Rationale</a></li>
                <li><a href="#section6">Inclusions</a></li>
                <li><a href="#section7">Exclusions</a></li>
                <li><a href="#section8">MPOG Concept IDs Required</a></li>
                <li><a href="#section9">Data Diagnostics Affected</a></li>
                <li><a href="#section10">Collations Used</a></li>
                <li><a href="#section11">Other Measure Build Details</a></li>
                <li><a href="#section12">Success</a></li>
                <li><a href="#section13">Responsible Provider</a></li>
                <li><a href="#section14">Risk Adjustment</a></li>
                <li><a href="#section15">Flow Chart</a></li>
                <li><a href="#section16">References</a></li>
            </ul>
        </div>
    </nav>

    <div id="section1" class="container-fluid">
        <div style="display:flex; justify-content: space-between;">
            <div style="display:flex; justify-content: space-between; width:50%">
                <h4>
                    @Html.ActionLink("Go Back to Measure List", "Index", "Measures")
                </h4>
                <h4>
                    @Html.ActionLink("View " + (String)@Model.spec_Results.First().Measure_Abbreviation + " Spec", "Index", "Spec", new { id = Model.spec_Results.First().Measure_ID }, null)
                </h4>
            </div>
            @if (isQI)
            {
                <h4>
                    @Html.ActionLink("Edit " + (String)@Model.spec_Results.First().Measure_Abbreviation + " Spec", "Edit", "Spec", new { id = Model.spec_Results.First().Measure_ID }, null)
                </h4>
            }
        </div>
        <h2>@Model.spec_Results.First().Measure_Abbreviation Basic Info</h2>
        <table>
            <tr>
                <th>Unpublished</th>
                <th>Published</th>
            </tr>
            <tr>
                <td>
                    <dl class="dl-horizontal" style="text-align:left">
                        <dt>
                            NQS Domain
                        </dt>
                        <dd>
                            @if (Model.spec_Results.First().NQS_Domain_ID != null)
                            {
                                @Model.nQS_Domain.Where(o => o.NQS_Domain_ID == Model.spec_Results.First().NQS_Domain_ID).First().NQS_Domain_Name
                            }
                        </dd>
                        <dt>
                            Measure Type
                        </dt>
                        <dd>
                            @if (Model.spec_Results.First().Measure_Type_ID != null)
                            {
                                @Model.measure_Type.Where(o => o.Measure_Type_ID == Model.spec_Results.First().Measure_Type_ID).First().Measure_Type_Name
                            }
                        </dd>

                        <dt>
                            Scope
                        </dt>
                        <dd>
                            @if (Model.spec_Results.First().Measure_Scope_ID != null)
                            {
                                @Model.scope.Where(o => o.Scope_ID == Model.spec_Results.First().Measure_Scope_ID).First().Scope_Name
                            }
                        </dd>

                        <dt>
                            Threshold
                        </dt>
                        <dd>
                            @if (Model.spec_Results.First().Threshold != null)
                            {
                                @Model.spec_Results.First().Threshold.Value.ToString("P");
                            }
                        </dd>
                    </dl>
                </td>
                <td>
                    <dl class="dl-horizontal" style="text-align:left">
                        <dt>
                            NQS Domain
                        </dt>
                        <dd>
                            @if (hasPublishedVersion && Model.spec_Published_Results.First().NQS_Domain_ID != null)
                            {
                                @Model.nQS_Domain.Where(o => o.NQS_Domain_ID == Model.spec_Published_Results.First().NQS_Domain_ID).First().NQS_Domain_Name
                            }
                        </dd>

                        <dt>
                            Measure Type
                        </dt>
                        <dd>
                            @if (hasPublishedVersion && Model.spec_Published_Results.First().Measure_Type_ID != null)
                            {
                                @Model.measure_Type.Where(o => o.Measure_Type_ID == Model.spec_Published_Results.First().Measure_Type_ID).First().Measure_Type_Name
                            }
                        </dd>

                        <dt>
                            Scope
                        </dt>
                        <dd>
                            @if (hasPublishedVersion && Model.spec_Published_Results.First().Measure_Scope_ID != null)
                            {
                                @Model.scope.Where(o => o.Scope_ID == Model.spec_Published_Results.First().Measure_Scope_ID).First().Scope_Name
                            }
                        </dd>

                        <dt>
                            Threshold
                        </dt>
                        <dd>
                            @if (hasPublishedVersion && Model.spec_Published_Results.First().Threshold != null)
                            {
                                @Model.spec_Published_Results.First().Threshold.Value.ToString("P");
                            }
                        </dd>
                    </dl>
                </td>
            </tr>
        </table>
    </div>

    <span class="anchor" id="section2"></span>
    <div id="section22">
        <h2>Data Collection Method</h2>
        <table>
            <tr>
                <th>Unpublished</th>
                <th>Published</th>
            </tr>
            <tr>
                <td>
                    <div class="col-md-11" style="word-wrap:break-word">
                        @Html.Raw(Model.spec_Results.First().Data_Collection_Method)
                    </div>
                </td>
                <td>
                    @if (hasPublishedVersion)
                    {
                        <div class="col-md-11" style="word-wrap:break-word">
                            @Html.Raw(Model.spec_Published_Results.First().Data_Collection_Method)
                        </div>
                    }
                </td>
            </tr>
        </table>
    </div>

    <span class="anchor" id="section3"></span>
    <div id="section33">
        <h2>Description</h2>
        <table>
            <tr>
                <th>Unpublished</th>
                <th>Published</th>
            </tr>
            <tr>
                <td>
                    <div class="col-md-11" style="word-wrap:break-word">
                        @Html.Raw(Model.spec_Results.First().Description)
                    </div>
                </td>
                <td>
                    @if (hasPublishedVersion)
                    {
                        <div class="col-md-11" style="word-wrap:break-word">
                            @Html.Raw(Model.spec_Published_Results.First().Description)
                        </div>
                    }
                </td>
            </tr>
        </table>
    </div>

    <span class="anchor" id="section4"></span>
    <div id="section44">
        <h2>Measure Summary</h2>
        <table>
            <tr>
                <th>Unpublished</th>
                <th>Published</th>
            </tr>
            <tr>
                <td>
                    <div class="col-md-11" style="word-wrap:break-word">
                        @Html.Raw(Model.spec_Results.First().Measure_Summary)
                    </div>
                </td>
                <td>
                    @if (hasPublishedVersion)
                    {
                        <div class="col-md-11" style="word-wrap:break-word">
                            @Html.Raw(Model.spec_Published_Results.First().Measure_Summary)
                        </div>
                    }
                </td>
            </tr>
        </table>
    </div>

    <span class="anchor" id="section5"></span>
    <div id="section55">
        <h2>Rationale</h2>
        <table>
            <tr>
                <th>Unpublished</th>
                <th>Published</th>
            </tr>
            <tr>
                <td>
                    <div class="col-md-11" style="word-wrap:break-word">
                        @Html.Raw(Model.spec_Results.First().Rationale)
                    </div>
                </td>
                <td>
                    @if (hasPublishedVersion)
                    {
                        <div class="col-md-11" style="word-wrap:break-word">
                            @Html.Raw(Model.spec_Published_Results.First().Rationale)
                        </div>
                    }
                </td>
            </tr>
        </table>
    </div>

    <span class="anchor" id="section6"></span>
    <div id="section66">
        <h2>Inclusions</h2>
        <table>
            <tr>
                <th>Unpublished</th>
                <th>Published</th>
            </tr>
            <tr>
                <td>
                    <div class="col-md-11" style="word-wrap:break-word">
                        @Html.Raw(Model.spec_Results.First().Inclusions)
                        @*<textarea id="textarea_inclusions" name="editor_inclusions" readonly cols="60" rows="10" wrap="hard">@Model.pager_Auth_Results.First().Inclusions</textarea>*@
                        @*@Model.pager_Auth_Results.First().Inclusions*@
                    </div>
                </td>
                <td>
                    @if (hasPublishedVersion)
                    {
                        <div class="col-md-11" style="word-wrap:break-word">
                            @Html.Raw(Model.spec_Published_Results.First().Inclusions)
                            @*@Model.pager_Results.First().Inclusions*@
                            @*<textarea id="textarea_inclusions_published" name="editor_inclusions_published" readonly cols="60" rows="10" wrap="hard">@Model.pager_Results.First().Inclusions</textarea>*@
                        </div>
                    }
                </td>
            </tr>
        </table>
    </div>

    <span class="anchor" id="section7"></span>
    <div id="section77">
        <h2>Exclusions</h2>
        <table>
            <tr>
                <th>Unpublished</th>
                <th>Published</th>
            </tr>
            <tr>
                <td>
                    <div class="col-md-11" style="word-wrap:break-word">
                        @Html.Raw(Model.spec_Results.First().Exclusions)
                    </div>
                </td>
                <td>
                    @if (hasPublishedVersion)
                    {
                        <div class="col-md-11" style="word-wrap:break-word">
                            @Html.Raw(Model.spec_Published_Results.First().Exclusions)
                        </div>
                    }
                </td>
            </tr>
        </table>
    </div>

    <!--
        Concept ID
    -->
    <span class="anchor" id="section8"></span>
    <div id="section88">
        <h2>MPOG Concept IDs Required</h2>
        <table>
            <tr>
                <th>Unpublished</th>
                <th>Published</th>
            </tr>
            <tr>
                <td>
                    <div class="col-md-11" style="word-wrap:break-word">
                        @foreach (var header in Model.concept_ID_Required_Results.Where(o => o.Header_Status != 2))
                        {
                            <strong>@header.Header_Unpublished_Name</strong>
                            <ul>
                                @foreach (var item in Model.all_Concept_ids.Where(o => o.MPOG_Concept_Header_ID == header.MPOG_Concept_Header_ID && o.Concept_Status != 2))
                                {
                                    <li>
                                        @item.MPOG_Concept_ID
                                        @Model.all_Concepts.Where(o => o.MPOG_Concept_ID == item.MPOG_Concept_ID).First().concept_desc
                                    </li>
                                }
                                @foreach (var item in Model.all_Concept_ids.Where(o => o.MPOG_Concept_Header_ID == header.MPOG_Concept_Header_ID && o.Concept_Status == 2))
                                {
                                    <li style="text-decoration:line-through">
                                        @item.MPOG_Concept_ID
                                        @Model.all_Concepts.Where(o => o.MPOG_Concept_ID == item.MPOG_Concept_ID).First().concept_desc
                                    </li>
                                }
                            </ul>
                        }
                    </div>
                    <div class="col-md-11" style="word-wrap:break-word; text-decoration:line-through">
                        @foreach (var header in Model.concept_ID_Required_Results.Where(o => o.Header_Status == 2))
                        {
                            <strong>@header.Header_Unpublished_Name</strong>
                            <ul>
                                @foreach (var item in Model.all_Concept_ids.Where(o => o.MPOG_Concept_Header_ID == header.MPOG_Concept_Header_ID))
                                {
                                    <li>
                                        @item.MPOG_Concept_ID
                                        @Model.all_Concepts.Where(o => o.MPOG_Concept_ID == item.MPOG_Concept_ID).First().concept_desc
                                    </li>
                                }
                            </ul>
                        }
                    </div>
                </td>
                <td>
                    @if (hasPublishedVersion)
                    {
                    <div class="col-md-11" style="word-wrap:break-word">
                        @foreach (var header in Model.concept_ID_Required_Results.Where(o => o.Header_Status != 0))
                        {
                            <strong>@header.MPOG_Concept_Header_Name</strong>
                            <ul>
                                @foreach (var item in Model.all_Concept_ids.Where(o => o.MPOG_Concept_Header_ID == header.MPOG_Concept_Header_ID && o.Concept_Status != 0))
                                {
                                    <li>
                                        @item.MPOG_Concept_ID
                                        @Model.all_Concepts.Where(o => o.MPOG_Concept_ID == item.MPOG_Concept_ID).First().concept_desc
                                    </li>
                                }
                            </ul>
                        }
                    </div>
                    }
                </td>
            </tr>
        </table>
    </div>

    <!--
        Data Diagnostics Affected
    -->
    <span class="anchor" id="section9"></span>
    <div id="section99">
        <h2>Data Diagnostics Affected</h2>
        <table>
            <tr>
                <th>Unpublished</th>
                <th>Published</th>
            </tr>
            <tr>
                <td>
                    <div class="col-md-11" style="word-wrap:break-word">
                        <ul>
                            @foreach (var item in Model.data_Diagnostics_Affected_Results)
                            {
                                <li>
                                    @item.Display_Name
                                </li>
                            }
                        </ul>
                    </div>
                </td>
                <td>
                    @if (hasPublishedVersion)
                    {
                        <div class="col-md-11" style="word-wrap:break-word">
                        </div>
                    }
                </td>
            </tr>
        </table>
    </div>

    <!--
        Collations Used
    -->
    <span class="anchor" id="section10"></span>
    <div id="section1010">
        <h2>Collations Used</h2>
        <button type="button" id="viewcollations">View Collations</button>
        <div id="collations">
        </div>
    </div>

    <!--
        Other Measure Build Details
    -->
    <span class="anchor" id="section11"></span>
    <div id="section1111">
        <h2>Other Measure Build Details</h2>
        <table>
            <tr>
                <th>Unpublished</th>
                <th>Published</th>
            </tr>
            <tr>
                <td>
                    <div class="col-md-11" style="word-wrap:break-word">
                        @Html.Raw(Model.spec_Results.First().Other_Build_Details)
                    </div>
                </td>
                <td>
                    @if (hasPublishedVersion)
                    {
                        <div class="col-md-11" style="word-wrap:break-word">
                            @Html.Raw(Model.spec_Published_Results.First().Other_Build_Details)
                        </div>
                    }
                </td>
            </tr>
        </table>
    </div>

    <span class="anchor" id="section12"></span>
    <div id="section1212">
        <h2>Success</h2>
        <table>
            <tr>
                <th>Unpublished</th>
                <th>Published</th>
            </tr>
            <tr>
                <td>
                    <div class="col-md-11" style="word-wrap:break-word">
                        @Html.Raw(Model.spec_Results.First().Success)
                    </div>
                </td>
                <td>
                    @if (hasPublishedVersion)
                    {<div class="col-md-11" style="word-wrap:break-word">
                            @Html.Raw(Model.spec_Published_Results.First().Success)
                        </div>
                    }
                </td>
            </tr>
        </table>
    </div>

    <span class="anchor" id="section13"></span>
    <div id="section1313">
        <h2>Responsible Provider</h2>
        <table>
            <tr>
                <th>Unpublished</th>
                <th>Published</th>
            </tr>
            <tr>
                <td>
                    <div class="col-md-11" style="word-wrap:break-word">
                        @if (Model.spec_Results.First().Responsible_Provider_ID != null)
                        {
                            @Html.Raw(Model.responsible_Provider.Where(o => o.Responsible_Provider_ID == Model.spec_Results.First().Responsible_Provider_ID).First().Responsible_Provider_Name)
                        }
                    </div>
                </td>
                <td>
                    <div class="col-md-11" style="word-wrap:break-word">
                        @if (hasPublishedVersion && Model.spec_Published_Results.First().Responsible_Provider_ID != null)
                        {
                            @Html.Raw(Model.responsible_Provider.Where(o => o.Responsible_Provider_ID == Model.spec_Published_Results.First().Responsible_Provider_ID).First().Responsible_Provider_Name)
                        }
                    </div>
                </td>
            </tr>
        </table>
    </div>

    <span class="anchor" id="section14"></span>
    <div id="section1414">
        <h2>Risk Adjustment</h2>
        <table>
            <tr>
                <th>Unpublished</th>
                <th>Published</th>
            </tr>
            <tr>
                <td>
                    <div class="col-md-11" style="word-wrap:break-word">
                        @Html.Raw(Model.spec_Results.First().Risk_Adjustment)
                    </div>
                </td>
                <td>
                    @if (hasPublishedVersion)
                    {
                        <div class="col-md-11" style="word-wrap:break-word">
                            @Html.Raw(Model.spec_Published_Results.First().Risk_Adjustment)
                        </div>
                    }
                </td>
            </tr>
        </table>
    </div>

    <span class="anchor" id="section15"></span>
    <div id="section1515">
        <h2>Flow Chart</h2>
        <table>
            <tr>
                <th>Unpublished</th>
                <th>Published</th>
            </tr>
            <tr>
                <td>
                    <div class="col-md-11" style="word-wrap:break-word">
                        @Html.Raw(Model.spec_Results.First().Flow_Chart)
                    </div>
                </td>
                <td>
                    @if (hasPublishedVersion)
                    {
                        <div class="col-md-11" style="word-wrap:break-word">
                            @Html.Raw(Model.spec_Published_Results.First().Flow_Chart)
                        </div>
                    }
                </td>
            </tr>
        </table>
    </div>

    <span class="anchor" id="section16"></span>
    <div id="section1616">
        <h2>References</h2>
        <table>
            <tr>
                <th>Unpublished</th>
                <th>Published</th>
            </tr>
            <tr>
                <td>
                    <div class="col-md-11" style="word-wrap:break-word">
                        @Html.Raw(Model.spec_Results.First().Reference)
                    </div>
                </td>
                <td>
                    @if (hasPublishedVersion)
                    {
                        <div class="col-md-11" style="word-wrap:break-word">
                            @Html.Raw(Model.spec_Published_Results.First().Reference)
                        </div>
                    }
                </td>
            </tr>
        </table>
    </div>
    <button id="top">Top</button>
    <script type="text/javascript">
         $('#viewcollations').click(function () {
                $('#viewcollations').html('<i class="fa fa-spin fa-spinner"></i> loading');
                var measure_id = @Model.spec_Results.First().Measure_ID;
                $.ajax({
                    url: '@Url.Action("ViewCollations","Spec")',
                    type: 'POST',
                    data: {
                        'measure_id': measure_id
                    },
                    success: function (data) {
                        if (data.success) {
                            var content = '<ul>'
                            for (var i = 0; i < data.collations.length; i++) {
                                var li = '<li>';
                                li = li.concat(data.collations[i].Collation_Name, '</li>')
                                content = content.concat(li);
                            }
                            content.concat('</ul>');
                            $('#viewcollations').remove();
                            $('#collations').html(content);
                        }
                    }
                })
            });

        $(document).ready(function () {
            $("#top").click(function () {
                $("html, body").animate({ scrollTop: 0 }, 500)
            });
        })
    </script>
</body>
</html>
