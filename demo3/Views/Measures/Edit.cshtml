@model demo3.Models.EditMeasure
@{             

    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    //@Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>ASPIRE_Measures</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group" style="display:none">
        @Html.LabelFor(model => model.Details_All_Results.First().Measure_ID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Details_All_Results.First().Measure_ID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Details_All_Results.First().Measure_ID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Details_All_Results.First().Measure_Abbreviation, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Details_All_Results.First().Measure_Abbreviation, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Details_All_Results.First().Measure_Abbreviation, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Details_All_Results.First().Measure_Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Details_All_Results.First().Measure_Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Details_All_Results.First().Measure_Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Details_All_Results.First().NQS_Domain, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model=>model.Details_All_Results.First().NQS_Domain, new SelectList(Model.Enumerations, "Enumeration_ID", "Enumeration_Content", selectedValue: Model.Details_All_Results.First().NQS_Domain), "select NQS Domain", new { @class = "form-control" })
            @*@Html.EditorFor(model => model.Details_All_Results.First().NQS_Domain, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.Details_All_Results.First().NQS_Domain, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Details_All_Results.First().QCDR_Measure_Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Details_All_Results.First().QCDR_Measure_Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Details_All_Results.First().QCDR_Measure_Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Details_All_Results.First().VBR, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
                 @Html.DropDownListFor(model => model.Details_All_Results.First().VBR, new SelectList(new[] {
                                new  { Value = "", Text = "Not Set" },
                                new { Value = "true", Text = "Yes" },
                                new  { Value = "false", Text = "No" },                 
                                },
                                "Value",
                                "Text",
                                Model
                       ),  new { @class = "form-control" })            
            @Html.ValidationMessageFor(model => model.Details_All_Results.First().VBR, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Details_All_Results.First().Clinical_Lead, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Details_All_Results.First().Clinical_Lead, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Details_All_Results.First().Clinical_Lead, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Details_All_Results.First().Developer, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Details_All_Results.First().Developer, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Details_All_Results.First().Developer, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
        @Html.LabelFor(model => model.Details_All_Results.First().Measure_Spec_Completed, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Details_All_Results.First().Measure_Spec_Completed, new SelectList(new[] {
            new  { Value = "", Text = "Not Set" },
            new { Value = "true", Text = "Yes" },
            new  { Value = "false", Text = "No" },
            },
            "Value",
            "Text",
            Model
            ),  new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Details_All_Results.First().Measure_Spec_Completed, "", new { @class = "text-danger" })
        </div>
    </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.Details_All_Results.First().Date_Published, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Details_All_Results.First().Date_Published, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Details_All_Results.First().Date_Published, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Details_All_Results.First().Status_ID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.DropDownListFor(model=>model.Details_All_Results.First().Status_ID, new SelectList(Model.Status_Types, "Status_ID", "Status_Name", selectedValue: Model.Details_All_Results.First().Status_ID), "select status", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Details_All_Results.First().Status_ID, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
