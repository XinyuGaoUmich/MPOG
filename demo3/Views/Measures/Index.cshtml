@model demo3.Models.MeasureStatus

@{

    ViewBag.Title = "MainPage";

}

<link href="~/Content/table.css" rel="stylesheet" type="text/css" />
<link href="~/Content/table_index.css" rel="stylesheet" type="text/css" />
<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" rel="stylesheet" type="text/css" />
<link href="~/Content/checkbox-custom.css" rel="stylesheet" type="text/css" />
<link href="https://cdn.datatables.net/1.10.16/css/dataTables.bootstrap.min.css" rel="stylesheet" type="text/css" />
<link href="https://cdn.datatables.net/fixedcolumns/3.2.6/css/fixedColumns.dataTables.min.css" rel="stylesheet" type="text/css" />
<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
<script type="text/javascript" src="https://cdn.datatables.net/1.10.16/js/jquery.dataTables.min.js"></script>
<script type="text/javascript" src="https://cdn.datatables.net/fixedcolumns/3.2.6/js/dataTables.fixedColumns.min.js"></script>
<div style="display: flex; justify-content: space-between">
    <div style="margin-right:100px;">
        <p>
            @Html.ActionLink("Create New Measure", "Create")
        </p>

    </div>
    <div class="btn_check">
        <input type="checkbox" id="check">
        <label class="btn btn-default" for="check">
            <i class="fa fa-square-o"></i>
            <span id="checkDisplay">  Check to display Archived Measures</span>

        </label>
    </div>
</div>






<div style="overflow-x: auto; text-align:center">
    <table class="table table-striped table-bordered" id="IndexTable" style="width:100%; visibility:hidden">
        <thead id="myHeader" class="header">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Measure_List_Results.First().Measure_Abbreviation)
                </th>
                <th width="200px">
                    Measure Status
                    <button class="btn btn-secondary btn-sm" onclick="SendData(this)">Submit Change</button>
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Measure_List_Results.First().Measure_Title)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.Measure_List_Results.First().NQS_Domain)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.Measure_List_Results.First().QCDR_Measure_Name)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.Measure_List_Results.First().VBR)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.Measure_List_Results.First().Clinical_Lead)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.Measure_List_Results.First().Developer)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.Measure_List_Results.First().Date_Published)
                </th>

                <th>
                    Pager
                </th>
                <th>
                    Spec
                </th>
                <th>
                    Operations
                </th>
            </tr>
        </thead>

        <tbody>


            @foreach (var item in Model.Measure_List_Results)
            {
                <tr class="@item.Status_ID">
                    <td>
                        @Html.DisplayFor(modelItem => item.Measure_Abbreviation).ToString().Replace("-", " ")
                    </td>
                    <td style="width: 200px">
                        @Html.DropDownList("Status_ID", new SelectList(Model.Status_Types, "Status_ID", "Status_Name", selectedValue: item.Status_ID), new { @class = "form-control", style = "width: 170px", @id = item.Measure_ID, onchange = "Update_Selection(this)" })

                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Measure_Title)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.NQS_Domain_Name)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.QCDR_Measure_Name)
                    </td>

                    <td>
                        @*@Html.DisplayFor(modelItem => item.VBR)*@
                        @if (item.VBR == null)
                        {
                            <text>Not Set</text>
                        }
                        else if ((bool)item.VBR)
                        {
                            <text>Yes</text>
                        }
                        else
                        {
                            <text>No</text>
                        }

                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Clinical_Lead)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Developer)
                    </td>

                    @*<td>
                            @if (item.Measure_Spec_Completed == null)
                            {
                                <text>Not Set</text>
                            }
                            else if ((bool)item.Measure_Spec_Completed)
                            {
                                <text>Yes</text>
                            }
                            else
                            {
                                <text>No</text>
                            }
                        </td>*@

                    <td>
                        @Html.DisplayFor(modelItem => item.Date_Published)
                    </td>


                    <td>
                        @Html.ActionLink(@item.Measure_Abbreviation.ToString().Replace("-", " ") + " Pager", "Pager", new { id = item.Measure_ID })
                    </td>

                    <td>
                        @Html.ActionLink(item.Measure_Abbreviation.ToString().Replace("-", " ") + " Spec", "Spec", new { id = item.Measure_ID })
                    </td>

                    <td style="text-align: left">
                        <ul>
                            <li>
                                @Html.ActionLink("Edit", "Edit", new { id = item.Measure_ID })
                            </li>
                            <li>
                                @Html.ActionLink("Details", "Details", new { id = item.Measure_ID })
                            </li>
                        </ul>
                    </td>
                </tr>

            }
        </tbody>
    </table>
</div>
<input value="" id="record_id" type="hidden" />
<input value="" id="record_selection" type="hidden" />



<script type="text/javascript">

    function Update_Selection(selection) {
        console.log(selection.value);
        console.log(selection.id);

        document.getElementById("record_id").value = selection.id;
        document.getElementById("record_selection").value = selection.value;
    }




    $(document).ready(function () {
        $('#IndexTable tbody tr.6').hide()

        document.getElementById('IndexTable').style.visibility = "visible";
        var iStart = new Date().getTime();
        var oTable = $('#IndexTable').dataTable(
            {
                "sScrollY": "400px",
                "sScrollX": "100%",
               // "sScrollXInner": "100%",
                //"bScrollCollapse": true,
               
                "fixedColumns": {
                    leftColumns: 1
                },
                "paging": false
                //"bPaginate": false,
                //"bFilter": false
                //"sAjaxSource": "Index",
                //"bJqueryUI": true,

            });



    });
     function SendData() {
        var record_id = document.getElementById("record_id").value;
        var record_selection = document.getElementById("record_selection").value
        if (record_id == '' ) {
            alert("please select measure");
            return;
        }
        if (record_selection == '') {
            alert("please select measure status");
            return;
        }

        console.log("not empty");
        var dataPost = {
            'record_id': parseInt(record_id),
            'record_selection': parseInt(record_selection)
        }
        $.ajax({
            type: 'POST',
            data: dataPost,
            url: '@Url.Action("Update_Status","Measures")',
            success: function (data) {
                alert(data);
                window.location.href = '@Url.Action("Index", "Measures")';

            },
            error: function (data) {
                alert("fail to update measure status!");
            }
        })


    }
       $('#check').change(function () {
        if (this.checked) {
            console.log("checked");
            $('#checkDisplay').text('Uncheck to hide Archived Measures')
            $('#IndexTable tbody tr.6').show()
        }
          else {
            console.log("unchecked");
            $('#checkDisplay').text('Check to display Archived Measures');
            $('#IndexTable tbody tr.6').hide();
        }
    })


</script>   