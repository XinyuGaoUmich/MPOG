@model demo3.Models.MeasureStatus

@*@model IEnumerable<demo3.Models.Measure_List_Result>*@
@{

    ViewBag.Title = "MainPage";

    Boolean isLoggedin = false;
    Boolean notForUser = false;
    // check session

    if (Session["roles"] != null && Session["roles"].ToString().Contains("MeasureSpecEditor"))
    {
        isLoggedin = true;
    }
    else if (Session["userid"] != null)
    {
        notForUser = true;
    }



}

<link href="~/Content/table.css" rel="stylesheet" type="text/css" />

@if (isLoggedin)
{
    <p>
        @Html.ActionLink("Create New Measure", "Create")

    </p>
}

@if (notForUser)
{
    <h4>
        <code>You are not QI coordinator, please @Html.ActionLink("Logout", "Logout") </code>

    </h4>
}

<div style="overflow: auto; text-align:center">
    <table class="table">
        <tr>
            <th>
                Measure Status
                <button class="btn btn-secondary btn-sm" onclick="SendData(this)">Submit Change</button>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Measure_List_Results.First().Measure_Abbreviation)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.Measure_List_Results.First().Measure_Title)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.Measure_List_Results.First().NQS_Domain)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.Measure_List_Results.First().QCDR_Measure_Name)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.Measure_List_Results.First().VBR)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.Measure_List_Results.First().Clinical_Lead)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.Measure_List_Results.First().Developer)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.Measure_List_Results.First().Measure_Spec_Completed)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.Measure_List_Results.First().Date_Published)
            </th>

            <th>
                Pager
            </th>
            <th>
                Spec
            </th>
            @if (isLoggedin)
            {
                <th>
                    Operations
                </th>
            }

        </tr>

        @foreach (var item in Model.Measure_List_Results)
        {
            <tr>
                <td style="width: 200px">
                    @Html.DropDownList("Status_ID", new SelectList(Model.Status_Types, "Status_ID", "Status_Name", selectedValue: item.Status_ID), "select-status", new { @class = "form-control", style = "width: 100px", @id = item.Measure_ID, onchange="Update_Selection(this)"})

                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Measure_Abbreviation).ToString().Replace("-", " ")
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Measure_Title)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.NQS_Domain_Name)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.QCDR_Measure_Name)
                </td>

                <td>
                    @*@Html.DisplayFor(modelItem => item.VBR)*@
                    @if (item.VBR == null)
                    {
                        <text>Not Set</text>
                    }
                    else if ((bool)item.VBR)
                    {
                        <text>Yes</text>
                    }
                    else
                    {
                        <text>No</text>
                    }

                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Clinical_Lead)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Developer)
                </td>

                <td>
                    @*@Html.DisplayFor(modelItem => item.Measure_Spec_Completed)*@
                    @if (item.Measure_Spec_Completed == null)
                    {
                        <text>Not Set</text>
                    }
                    else if ((bool)item.Measure_Spec_Completed)
                    {
                        <text>Yes</text>
                    }
                    else
                    {
                        <text>No</text>
                    }
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Date_Published)
                </td>


                <td>
                    @Html.ActionLink(@item.Measure_Abbreviation.ToString().Replace("-", " ") + " Pager", "Pager", new { id = item.Measure_ID })
                </td>

                <td>
                    @Html.ActionLink(item.Measure_Abbreviation.ToString().Replace("-", " ") + " Spec", "Spec", new { id = item.Measure_ID })
                </td>



                @if (isLoggedin)
                {
                    <td style="text-align: left">
                        <ul>
                            <li>
                                @Html.ActionLink("Edit", "Edit", new { id = item.Measure_ID })
                            </li>
                            <li>
                                @Html.ActionLink("Details", "Details", new { id = item.Measure_ID })
                            </li>
                            <li>
                                @Html.ActionLink("Delete", "Delete", new { id = item.Measure_ID })
                            </li>
                        </ul>
                    </td>         
                }


            </tr>

        }

    </table>
</div>
<input value="" id="record_id" type="hidden"/>
<input value="" id="record_selection" type="hidden"/>


<script type="text/javascript">
  
    function Update_Selection(selection) {
        console.log(selection.value);
        console.log(selection.id);
       
        document.getElementById("record_id").value = selection.id;
        document.getElementById("record_selection").value = selection.value;
    }

    function SendData() {
        var record_id = document.getElementById("record_id").value;
        var record_selection = document.getElementById("record_selection").value 
        if (record_id == '' ) {
            alert("please select measure");
            return;
        }
        if (record_selection == '') {
            alert("please select measure status");
            return;
        }
        
        console.log("not empty");
        var dataPost = {
            'record_id': parseInt(record_id),
            'record_selection': parseInt(record_selection)
        }
        $.ajax({
            type: 'POST',
            data: dataPost,
            url: '@Url.Action("Update_Status","Measures")',
            success: function (data) {
                alert(data);
                 window.location.href = '@Url.Action("Index", "Measures")';
            },
            error: function (data) {
                alert("fail to update measure status!");
            }
        })
        
        
    }




</script>   